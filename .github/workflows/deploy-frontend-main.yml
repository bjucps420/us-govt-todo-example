name: Deploy Frontend Actions
on: [release]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Cache npm modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-npm-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Cache node modules
        id: cache-node
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: frontend/.node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: cd frontend && npm install
      - run: cd frontend && npm run generate
      - uses: vimtor/action-zip@v1
        with:
          files: frontend/dist/
          dest: frontend/dist.zip
      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: frontend/dist.zip
  docker:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: dist
      - run: mv dist.zip frontend/
      - run: cd frontend && unzip dist.zip -d dist
      - run: cd frontend && docker build -t frontend .
      - run: docker tag frontend registry.digitalocean.com/todos/frontend:$GITHUB_SHA
      - run: docker tag frontend registry.digitalocean.com/todos/frontend:latest
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - run: doctl registry login
      - run: docker push registry.digitalocean.com/todos/frontend:$GITHUB_SHA
      - run: docker push registry.digitalocean.com/todos/frontend:latest
  deploy:
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: set image deployments/frontend frontend=registry.digitalocean.com/todos/frontend:$GITHUB_SHA
      
